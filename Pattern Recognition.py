##### PATTERN RECOGNITION #####

import turtle
import math
import random

#SUBROUTINES
#builds flower
def buildFlower(sideAngle, topAngle, bottomAngle, repeat, x):
    for i in range(repeat):
        flower.forward(x)
        flower.right(180 - sideAngle)
        flower.forward(length2)
        flower.right(180 - topAngle)
        flower.forward(length2)
        flower.right(180 - sideAngle)
        flower.forward(x)
        flower.right(180 + gap)

#message formatting
def formatMsg(message):
    print("-" * 50 + "\n" + message)
        
def error(message):
    print("-" * 50 + "\n[Error] " + message)

#check values
def checkBound(x,minVal,maxVal):
    if (x > maxVal) or (x < minVal):
        error("This angle should be within " + str(minVal) + "-" + str(maxVal) + " degrees.")
        temp = str.lower(lol)

##### USER INPUT #####
formatMsg("FLOWER GENERATOR")

while True:

    manual = str.lower(input("-" * 50+ "\nWould you like to manually create a flower? [y/n]\n"))

    if manual == "y":
        #getting and chacking inputs
        while True:
            formatMsg("Please enter the following measuements of your\npetal: ")
            try:
                sideA = int(input("-"*50 + "\nSize of a side angle: "))
                checkBound(sideA, 1, 179)
                topA = int(input("Size of top angle: "))
                checkBound(topA, 1, 179)
                petalNum = int(input("Number of petals: "))       
                if petalNum<1:
                    print("-"*50 + "\n[Error] Your flower is reccomended to have more than no petals.")
                else:
                    petalLength = int(input("Longest length of petal: "))
                    break
            except ValueError:
                print("-"*50 + "\n[Error] Please enter the integer values of your\nangles.")
            except NameError:
                continue
            
    elif manual == "n":
        while True:
            sideA = random.randint(90, 170)
            topA = random.randint(20, 170)
            if not(sideA + topA > 179):
                break
        petalNum = random.randint(3, 20)
        petalLength = random.randint(50, 200)

        formatMsg("The dimentions generated by us: \n")
        print("Side Angle: " + str(sideA))
        print("Top Angle: " + str(topA))
        print("Number of Petals: " + str(petalNum))
        print("Length of Petal: " + str(petalLength))
        
    else:
        error("Please enter 'y' for yes and 'n' for no.")
        continue
    
    break
    
##### TURTLE SETUP #####
flower = turtle.Turtle()
flower.hideturtle()
flower.speed(10)

##### BUILD FLOWER #####
#caculate the last angle
bottomA = 360 - (sideA*2) - topA
#calculate shorter length using sine rule
length2 = (((petalLength) * (math.sin(0.5 * math.radians(bottomA)))) / (math.sin(0.5 * math.radians(topA))))
#calculate the degree of the gap
gap = (360 - (bottomA * petalNum)) / petalNum
buildFlower(sideA, topA, bottomA, petalNum, petalLength)

turtle.done()
